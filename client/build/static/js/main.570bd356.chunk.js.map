{"version":3,"sources":["component/chat.js","component/Intro.js","component/Enter.js","component/Display.js","App.js","serviceWorker.js","index.js"],"names":["socket","Intro","props","useEffect","localStorage","getItem","history","push","useState","username","email","password","details","setDetails","status","msg","err","setErr","changeVal","e","target","name","value","Grid","style","marginTop","columns","relaxed","stackable","Column","Message","attached","negative","Header","header","content","Form","className","autoComplete","onSubmit","preventDefault","axios","post","headers","then","res","data","catch","console","log","Input","icon","iconPosition","fluid","type","label","placeholder","onChange","Field","Checkbox","Button","labelPosition","Icon","onClick","Enter","login","setLogin","setItem","uname","key","List","Item","href","Display","document","querySelector","scrollTop","scrollHeight","Chat","setMsg","showAllMsg","setShowAllMsg","detail","removeItem","io","query","on","allMsg","oldMsg","width","Card","Content","as","height","overflow","undefined","map","personal","index","extra","event","emit","self","action","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.570bd356.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, Icon, Form, Card, Grid, Header } from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport Display from \"./Display\";\nimport io from \"socket.io-client\";\nlet socket;\n\nconst Chat = (props) => {\n  const [msg, setMsg] = useState(\"\");\n  const [showAllMsg, setShowAllMsg] = useState([]);\n\n  useEffect(() => {\n    if (!localStorage.getItem(\"uname\") && !localStorage.getItem(\"key\")) {\n      props.history.push(\"/\");\n    } else {\n      const detail = {\n        uname: localStorage.getItem(\"uname\"),\n        key: localStorage.getItem(\"key\"),\n      };\n      axios\n        .post(\"https://chattingappbro.herokuapp.com/check\", detail, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        })\n        .then((res) => {\n          if (res.data.status === false) {\n            localStorage.removeItem(\"uname\");\n            localStorage.removeItem(\"key\");\n            props.history.push(\"/\");\n          }\n        })\n        .catch((err) => console.log(err));\n    }\n    socket = io(\"https://chattingappbro.herokuapp.com/\", {\n      query: `user=${localStorage.getItem(\"uname\")}`,\n    });\n    socket.on(\"show-massage\", (data) => {\n      setShowAllMsg(data.allMsg);\n    });\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"join-others\", (data) => {\n      setShowAllMsg((oldMsg) => [...oldMsg, data.allMsg]);\n    });\n    socket.on(\"dis-others\", (data) => {\n      setShowAllMsg((oldMsg) => [...oldMsg, data.allMsg]);\n    });\n    socket.on(\"show-others\", (data) => {\n      setShowAllMsg((oldMsg) => [...oldMsg, data.allMsg]);\n    });\n  }, []);\n\n  const sendMsg = (event) => {\n    event.preventDefault();\n    socket.emit(\"send-massage\", { msg });\n    const self = {\n      username: \"Me\",\n      msg,\n    };\n    setShowAllMsg((oldMsg) => [...oldMsg, self]);\n    setMsg(\"\");\n  };\n\n  const manageLogout = () => {\n    localStorage.removeItem(\"uname\");\n    localStorage.removeItem(\"key\");\n    props.history.push(\"/\");\n  };\n\n  return (\n    <div>\n      <Grid style={{ marginTop: \"20px\" }}>\n        <Grid.Column width={1}></Grid.Column>\n        <Grid.Column width={14}>\n          <Card style={{ width: \"auto\" }}>\n            <Card.Content icon=\"users\">\n              <Card.Header>\n                <Header as=\"h3\">\n                  <Icon name=\"users\" />\n                  <Header.Content>\n                    Chats{\" \"}\n                    <Button type=\"button\" onClick={manageLogout}>\n                      Logout\n                    </Button>\n                  </Header.Content>\n                </Header>\n              </Card.Header>\n            </Card.Content>\n\n            <Card.Content\n              className=\"dishant\"\n              style={{ height: \"400px\", overflow: \"auto\" }}\n            >\n              {showAllMsg !== undefined\n                ? showAllMsg.map((personal, index) => {\n                    return (\n                      <Display\n                        username={personal.username}\n                        msg={personal.msg}\n                      />\n                    );\n                  })\n                : null}\n            </Card.Content>\n\n            <Card.Content extra>\n              <Form className=\" fluid \" autoComplete=\"off\" onSubmit={sendMsg}>\n                <Form.Input\n                  icon=\"facebook messenger\"\n                  iconPosition=\"left\"\n                  fluid\n                  type=\"text\"\n                  label=\"Massage\"\n                  placeholder=\"Type something....\"\n                  name=\"massage\"\n                  onChange={(e) => setMsg(e.target.value)}\n                  value={msg}\n                  action={\n                    <Button icon labelPosition=\"right\" type=\"submit\">\n                      Send\n                      <Icon name=\"send\" />\n                    </Button>\n                  }\n                />\n              </Form>\n            </Card.Content>\n          </Card>\n        </Grid.Column>\n        <Grid.Column width={1}></Grid.Column>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Chat;\n","import React, { useState, useEffect } from \"react\";\nimport { Button, Checkbox, Form, Grid, Message, Icon } from \"semantic-ui-react\";\nimport axios from \"axios\";\n\nconst Intro = (props) => {\n  useEffect(() => {\n    if (localStorage.getItem(\"uname\")) {\n      props.history.push(\"/chat\");\n    }\n  }, []);\n  const [details, setDetails] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const [err, setErr] = useState({\n    status: false,\n    msg: \"All fields are required..\",\n  });\n\n  const changeVal = (e) => {\n    setDetails({ ...details, [e.target.name]: e.target.value });\n  };\n  const sendData = (e) => {\n    e.preventDefault();\n    if (\n      details.username === \"\" ||\n      details.email === \"\" ||\n      details.password === \"\"\n    ) {\n      setErr({ ...err, status: true });\n    } else {\n      axios\n        .post(\"https://chattingappbro.herokuapp.com/insert\", details, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        })\n        .then((res) => {\n          if (res.data.status === false) {\n            setErr({ status: true, msg: res.data.msg });\n          } else if (res.data.status === true) {\n            props.history.push(\"/\");\n          }\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n  const redirectToSignIn = () => {\n    props.history.push(\"/\");\n  };\n  return (\n    <Grid style={{ marginTop: \"30px\" }} columns={3} relaxed=\"very\" stackable>\n      <Grid.Column></Grid.Column>\n      <Grid.Column>\n        {err.status ? (\n          <Message attached negative>\n            <Message.Header>We're sorry.</Message.Header>\n            <p>{err.msg}</p>\n          </Message>\n        ) : (\n          <Message\n            attached\n            header=\"Welcome to our site!\"\n            content=\"Fill out the form below to sign-in for entering the chat room\"\n          />\n        )}\n        <Form\n          className=\"attached fluid segment\"\n          autoComplete=\"off\"\n          onSubmit={sendData}\n        >\n          <Form.Input\n            icon=\"user\"\n            iconPosition=\"left\"\n            fluid\n            type=\"text\"\n            label=\"Username\"\n            placeholder=\"Username\"\n            name=\"username\"\n            value={details.username}\n            onChange={(e) => changeVal(e)}\n          />\n          <Form.Input\n            icon=\"user\"\n            iconPosition=\"left\"\n            fluid\n            type=\"text\"\n            label=\"email\"\n            placeholder=\"Example@gmail.com\"\n            name=\"email\"\n            value={details.email}\n            onChange={(e) => changeVal(e)}\n          />\n          <Form.Input\n            icon=\"key\"\n            iconPosition=\"left\"\n            fluid\n            type=\"password\"\n            label=\"Password\"\n            placeholder=\"Passsword\"\n            name=\"password\"\n            value={details.password}\n            onChange={(e) => changeVal(e)}\n          />\n          <Form.Field>\n            <Checkbox label=\"I agree to the Terms and Conditions\" />\n          </Form.Field>\n          <Button icon labelPosition=\"right\" type=\"submit\">\n            SignUp\n            <Icon name=\"signup\" />\n          </Button>\n          <Button\n            icon\n            labelPosition=\"right\"\n            type=\"button\"\n            onClick={redirectToSignIn}\n          >\n            Login\n            <Icon name=\"sign-in\" />\n          </Button>\n        </Form>\n      </Grid.Column>\n      <Grid.Column></Grid.Column>\n    </Grid>\n  );\n};\n\nexport default Intro;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Checkbox,\n  Form,\n  Grid,\n  Message,\n  Icon,\n  List,\n} from \"semantic-ui-react\";\n\nconst Enter = (props) => {\n  useEffect(() => {\n    if (localStorage.getItem(\"uname\")) {\n      props.history.push(\"/chat\");\n    }\n  }, []);\n  const [login, setLogin] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  const [err, setErr] = useState({\n    status: false,\n    msg: \"All fields are required..\",\n  });\n  const changeVal = (e) => {\n    setLogin({ ...login, [e.target.name]: e.target.value });\n  };\n  const sendData = (e) => {\n    e.preventDefault();\n    if (login.username === \"\" || login.password === \"\") {\n      setErr({ ...err, status: true });\n    } else {\n      axios\n        .post(\"https://chattingappbro.herokuapp.com/auth\", login, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        })\n        .then((res) => {\n          if (res.data.status === false) {\n            setErr({ status: true, msg: res.data.msg });\n          } else if (res.data.status === true) {\n            localStorage.setItem(\"uname\", res.data.uname);\n            localStorage.setItem(\"key\", res.data.key);\n            props.history.push(\"/chat\");\n          }\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n  const redirectToSignUp = () => {\n    props.history.push(\"/signup\");\n  };\n  return (\n    <Grid style={{ marginTop: \"50px\" }} columns={3} relaxed=\"very\" stackable>\n      <Grid.Column></Grid.Column>\n      <Grid.Column>\n        {err.status ? (\n          <Message attached negative>\n            <Message.Header>We're sorry.</Message.Header>\n            <p>{err.msg}</p>\n          </Message>\n        ) : (\n          <Message\n            attached\n            header=\"Welcome to our site!\"\n            content=\"Fill out the form below to sign-in for entering the chat room\"\n          />\n        )}\n        <Form\n          className=\"attached fluid segment\"\n          autoComplete=\"off\"\n          onSubmit={sendData}\n        >\n          <Form.Input\n            icon=\"user\"\n            iconPosition=\"left\"\n            fluid\n            type=\"text\"\n            label=\"Username\"\n            placeholder=\"Username\"\n            name=\"username\"\n            value={login.username}\n            onChange={(e) => changeVal(e)}\n          />\n          <Form.Input\n            icon=\"key\"\n            iconPosition=\"left\"\n            fluid\n            type=\"password\"\n            label=\"Password\"\n            placeholder=\"Passsword\"\n            name=\"password\"\n            value={login.password}\n            onChange={(e) => changeVal(e)}\n          />\n          <Form.Field>\n            <Checkbox label=\"I agree to the Terms and Conditions\" />\n          </Form.Field>\n          <Button icon labelPosition=\"right\" type=\"submit\">\n            Join\n            <Icon name=\"sign-in\" />\n          </Button>\n          <Button\n            icon\n            labelPosition=\"right\"\n            type=\"button\"\n            onClick={redirectToSignUp}\n          >\n            SignUp\n            <Icon name=\"signup\" />\n          </Button>\n        </Form>\n\n        <List>\n          <List.Item\n            icon=\"instagram\"\n            content={\n              <a href=\"https://www.instagram.com/thedishantnavadiya\">\n                thedishantnavadiya\n              </a>\n            }\n          />\n        </List>\n      </Grid.Column>\n      <Grid.Column></Grid.Column>\n    </Grid>\n  );\n};\nexport default Enter;\n","import React, { useEffect } from \"react\";\nimport { Message } from \"semantic-ui-react\";\nconst Display = ({ username, msg }) => {\n  useEffect(() => {\n    document.querySelector(\".dishant\").scrollTop = document.querySelector(\n      \".dishant\"\n    ).scrollHeight;\n  }, []);\n  return <Message header={username} content={msg} />;\n};\n\nexport default Display;\n","import React from \"react\";\nimport Intro from \"./component/Intro\";\nimport Enter from \"./component/Enter\";\nimport Chat from \"./component/chat\";\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nconst App = () => {\n  return (\n    <Router>\n      <Route path=\"/\" exact component={Enter} />\n      <Route path=\"/signup\" component={Intro} />\n      <Route path=\"/chat\" component={Chat} />\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}